drop table if exists COMMENTS_COMMENTS;
drop table if exists ARTISTS_LABELS;
drop table if exists PLAYLISTS_SUBSCRIPTION_PREMIUM;
drop table if exists PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM;
drop table if exists PRE_PAID_CARDS;
drop table if exists SUBSCRIPTION_PREMIUM;
drop table if exists SONGS_ALBUMS;
drop table if exists ARTISTS_SONGS;
drop table if exists SONG_COLLECTION;
drop table if exists PLAYLISTS;
drop table if exists COMMENTARY;
drop table if exists SONGS;
drop table if exists LABELS;
drop table if exists ALBUMS;
drop table if exists CLIENTS;
drop table if exists ARTISTS;
drop table if exists ADMINS;
drop table if exists PLATFORM_USERS;





create table PLATFORM_USERS (

	ID_USER							CHAR(10)	not null,
	USERNAME						VARCHAR(50)	not null,
	PASS_WORD						VARCHAR(32)	not null,
	constraint PK_USER primary key (ID_USER)
);


create table ADMINS(

	ID_PLATFORM_USER				CHAR(10)	not null,
	constraint PK_ADMINS primary key (ID_PLATFORM_USER)
);


create table CLIENTS(

	ID_PLATFORM_USER				CHAR(10)	not null,
	EMAIL							VARCHAR(50)	not null,
	ADDRESS							VARCHAR(20)	not null,
	AGE								NUMERIC(2)	not null,
	constraint PK_CLIENTS primary key (ID_PLATFORM_USER)
);


create table SUBSCRIPTION_PREMIUM(
	ID_SUBSCRIPTION	 	CHAR(10)	not null,
	PLAN		 		VARCHAR(50)	not null,
	PRICE		 		NUMERIC(8,2) not null,
	PREMIUM_START_DATE 	DATE not null,
	PREMIUM_END_DATE	DATE not null,
	constraint PK_SUBSCRIPTION PRIMARY KEY(ID_SUBSCRIPTION)
);

create table SONGS
(
	ISMN			CHAR(10) not null,
	TITLE			VARCHAR(50) not null,
	DURATION		NUMERIC(3) 	not null,
	RELEASE_DATE	DATE		not null,
	PUBLISHER		CHAR(10)	not null,
	PLAY_COUNTER		NUMERIC(3) not null,

	constraint PK_SONGS	primary key(ISMN)
);

CREATE TABLE TOP10 (
	1st_place		 CHAR(10) NOT NULL,
	2nd_place		 CHAR(10) NOT NULL,
	3rd_place		 CHAR(10) NOT NULL,
	4th_place		 CHAR(10) NOT NULL,
	5th_place		 CHAR(10) NOT NULL,
	6th_place		 CHAR(10) NOT NULL,
	7th_place		 CHAR(10) NOT NULL,
	8th_place		 CHAR(10) NOT NULL,
	9th_place		 CHAR(10) NOT NULL,
	10th_place		 CHAR(10) NOT NULL,
	client_platform_user_id CHAR(10) NOT NULL,
	PRIMARY KEY(client_platform_user_id)
);




create table LABELS
(
	ID_LABEL			CHAR(10)	not null,
	LABEL_NAME			VARCHAR(50)	not null,
	constraint PK_LABELS	primary key (ID_LABEL)
);


create table ARTISTS
(
	ID_PLATFORM_USER				CHAR(10)	not null,
	ARTISTIC_NAME					VARCHAR(50) not null,
	ID_LABEL						CHAR(10)	not null,
	ID_ADMIN						CHAR(10) not null,
	constraint PK_ARTISTS primary key(ID_PLATFORM_USER)
	
);

create table ALBUMS
(
	ID_ALBUM			CHAR(10)	not null,
	ALBUM_NAME			VARCHAR(50)	not null,
	RELEASE_DATE		DATE	not null,
	PUBLISHER       	CHAR(10) not null,  
	constraint PK_ALBUMS primary key(ID_ALBUM)

);

create table PRE_PAID_CARDS
(
	ID_CARD						CHAR(16) not null,
	CARD_VALUE					NUMERIC(3) 	not null,
	EXPIRATION_DATE				DATE	not null,
	ID_ADMIN					CHAR(10) not null,
	constraint PK_CARDS primary key(ID_CARD)

);

create table COMMENTARY(

	ID_COMMENT				 CHAR(10) not null,
	ID_PLATFORM_USER		 CHAR(10) not null,
	ISMN				 	 CHAR(10) not null,
	COMMENT_TEXT			 TEXT not null,
	CREATION_DATE			 DATE not null,
	constraint PK_COMMENT PRIMARY KEY(ID_COMMENT)
);

CREATE TABLE PLAYLISTS (
	ID_PLAYLIST	 						CHAR(10) not null,
	PLAYLIST_NAME					 	VARCHAR(50) not null,
	CREATION_DATE						DATE not null,
	PLAYLIST_TYPE						VARCHAR(50) not null,
	constraint PK_PLAYLIST PRIMARY KEY(ID_PLAYLIST)
);

CREATE TABLE SONG_COLLECTION (
	ID_COLLECTION 	CHAR(10) not null,
	SONG_POSITION 	NUMERIC(10) not null,
	ISMN	 		CHAR(10) not null,
	ID_PLAYLIST		CHAR(10) not null,
	PRIMARY KEY(ID_COLLECTION)
);

CREATE TABLE ARTISTS_LABELS (

	ID_ARTIST 				CHAR(10)	not null,
	ID_LABEL		 		CHAR(10)	not null,
	PRIMARY KEY(ID_ARTIST,ID_LABEL)

);

CREATE TABLE COMMENTS_COMMENTS (
	ID_COMMENT1	 CHAR(10) not null,
	ID_COMMENT2	 CHAR(10) not null,
	PRIMARY KEY(ID_COMMENT1)
);

CREATE TABLE PLAYLISTS_SUBSCRIPTION_PREMIUM (

	ID_PLAYLIST	 					CHAR(10) not null,
	ID_SUBSCRIPTION                 CHAR(10) not null,
	PRIMARY KEY(ID_PLAYLIST,ID_SUBSCRIPTION)
);

CREATE TABLE PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM (
	ID_CARD	 					CHAR(16) not null,
	ID_SUBSCRIPTION             CHAR(10) not null,
	PRIMARY KEY(ID_CARD,ID_SUBSCRIPTION)
);


CREATE TABLE SONGS_ALBUMS (
	ISMN	 					CHAR(10) not null,
	ID_ALBUM 					CHAR(10) not null,
	PRIMARY KEY(ISMN,ID_ALBUM)
);

CREATE TABLE ARTISTS_SONGS(
	ID_ARTIST 					CHAR(10) not null,
	ISMN			 			CHAR(10) not null,
	PRIMARY KEY(ID_ARTIST,ISMN)
);



ALTER TABLE ADMINS ADD CONSTRAINT FK1_ADMINS FOREIGN KEY (ID_PLATFORM_USER) REFERENCES PLATFORM_USERS(ID_USER);

ALTER TABLE ARTISTS ADD UNIQUE (ARTISTIC_NAME);
ALTER TABLE ARTISTS ADD CONSTRAINT FK1_ARTISTS FOREIGN KEY (ID_PLATFORM_USER) REFERENCES PLATFORM_USERS(ID_USER);
ALTER TABLE ARTISTS ADD CONSTRAINT FK2_ARTISTS FOREIGN KEY (ID_ADMIN) REFERENCES ADMINS(ID_PLATFORM_USER);

ALTER TABLE CLIENTS ADD UNIQUE (EMAIL);
ALTER TABLE CLIENTS ADD CONSTRAINT FK1_CLIENTS FOREIGN KEY (ID_PLATFORM_USER) REFERENCES PLATFORM_USERS(ID_USER);

ALTER TABLE SONGS ADD CONSTRAINT FK1_SONGS FOREIGN KEY (PUBLISHER) REFERENCES ARTISTS(ID_PLATFORM_USER);
ALTER TABLE ALBUMS ADD CONSTRAINT FK1_ALBUMS FOREIGN KEY (PUBLISHER) REFERENCES ARTISTS(ID_PLATFORM_USER);


ALTER TABLE TOP10 ADD UNIQUE (1st_place, 2nd_place, 3rd_place, 4th_place, 5th_place, 6th_place, 7th_place, 8th_place, 9th_place, 10th_place);
ALTER TABLE TOP10 ADD CONSTRAINT top10_fk1 FOREIGN KEY (client_platform_user_id) REFERENCES CLIENTS(ID_PLATFORM_USER);




ALTER TABLE PRE_PAID_CARDS ADD CONSTRAINT FK1_PRE_PAID_CARDS FOREIGN KEY (ID_ADMIN) REFERENCES ADMINS(ID_PLATFORM_USER);

ALTER TABLE COMMENTARY ADD CONSTRAINT FK1_COMMENTS FOREIGN KEY (ISMN) REFERENCES SONGS(ISMN);


ALTER TABLE COMMENTS_COMMENTS ADD CONSTRAINT FK1_COMMENTS_COMMENTS FOREIGN KEY (ID_COMMENT1) REFERENCES COMMENTARY(ID_COMMENT);
ALTER TABLE COMMENTS_COMMENTS ADD CONSTRAINT FK2_COMMENTS_COMMENTS FOREIGN KEY (ID_COMMENT2) REFERENCES COMMENTARY(ID_COMMENT);

ALTER TABLE SONG_COLLECTION ADD CONSTRAINT FK1_SONG_COLLECTION FOREIGN KEY (ISMN) REFERENCES SONGS(ISMN);
ALTER TABLE SONG_COLLECTION ADD CONSTRAINT FK2_SONG_COLLECTION FOREIGN KEY (ID_PLAYLIST) REFERENCES PLAYLISTS(ID_PLAYLIST);

ALTER TABLE ARTISTS_LABELS ADD CONSTRAINT FK1_ARTISTS_LABELS FOREIGN KEY (ID_ARTIST) REFERENCES ARTISTS(ID_PLATFORM_USER);
ALTER TABLE ARTISTS_LABELS ADD CONSTRAINT FK2_ARTISTS_LABELS FOREIGN KEY (ID_LABEL) REFERENCES LABELS(ID_LABEL);

ALTER TABLE PLAYLISTS_SUBSCRIPTION_PREMIUM ADD CONSTRAINT FK1_PLAYLISTS_SUBSCRIPTION_PREMIUM FOREIGN KEY (ID_PLAYLIST) REFERENCES PLAYLISTS(ID_PLAYLIST);
ALTER TABLE PLAYLISTS_SUBSCRIPTION_PREMIUM ADD CONSTRAINT FK2_PLAYLISTS_SUBSCRIPTION_PREMIUM FOREIGN KEY (ID_SUBSCRIPTION) REFERENCES SUBSCRIPTION_PREMIUM(ID_SUBSCRIPTION);

ALTER TABLE PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM  ADD CONSTRAINT FK1_PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM  FOREIGN KEY (ID_CARD) REFERENCES PRE_PAID_CARDS(ID_CARD);
ALTER TABLE PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM  ADD CONSTRAINT FK2_PRE_PAID_CARDS_SUBSCRIPTION_PREMIUM  FOREIGN KEY (ID_SUBSCRIPTION) REFERENCES SUBSCRIPTION_PREMIUM(ID_SUBSCRIPTION);


ALTER TABLE SONGS_ALBUMS ADD CONSTRAINT FK1_SONGS_ALBUMS FOREIGN KEY (ISMN) REFERENCES SONGS(ISMN);
ALTER TABLE SONGS_ALBUMS ADD CONSTRAINT FK2_SONGS_ALBUMS FOREIGN KEY (ID_ALBUM) REFERENCES ALBUMS(ID_ALBUM);

ALTER TABLE ARTISTS_SONGS ADD CONSTRAINT FK1_ARTISTS_SONGS FOREIGN KEY (ID_ARTIST) REFERENCES ARTISTS(ID_PLATFORM_USER);
ALTER TABLE ARTISTS_SONGS ADD CONSTRAINT FK2_ARTISTS_SONGS FOREIGN KEY (ISMN) REFERENCES SONGS(ISMN);

INSERT INTO PLATFORM_USERS(ID_USER,USERNAME,PASS_WORD) VALUES('0123456789','SKINNYJEANS','largeSODA');
INSERT INTO ADMINS(ID_PLATFORM_USER) VALUES('0123456789');

INSERT INTO LABELS(ID_LABEL,LABEL_NAME) VALUES('6589765896','MTV');

INSERT INTO PLATFORM_USERS(ID_USER,USERNAME,PASS_WORD) VALUES('9876543210','KAMIGURU','1234');
INSERT INTO ADMINS(ID_PLATFORM_USER) VALUES('9876543210');

INSERT INTO PLATFORM_USERS(ID_USER,USERNAME,PASS_WORD) VALUES('6589568651','marco','des');

INSERT INTO ARTISTS(ID_PLATFORM_USER,ARTISTIC_NAME,ID_LABEL,ID_ADMIN) VALUES('6589568651','TREX','6589765896','0123456789');

SELECT * FROM PLATFORM_USERS;





